/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Janelas;

import Controller.DruidController;
import Model.Druid;
import javax.swing.*;
import java.io.*;
import java.util.*;
import java.util.List;
import java.util.ArrayList;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import java.awt.Image;

public class DruidJanela extends javax.swing.JFrame {

    private DruidController controller = new DruidController();
    private List<Druid> druidsList; // A lista será inicializada e preenchida pelo controller
    private int currentIndex = 0;
    private JLabel backgroundLabel;

    /**
     * Creates new form DruidJanela
     */
    public DruidJanela() {
        initComponents();
        carregarDruids(); // Carregar os Druids ao iniciar a janela
        exibirDruid(); // Exibir o primeiro Druid
        setLocationRelativeTo(null);

        ImageIcon backgroundImage = new ImageIcon(getClass().getResource("/imagens/4.png"));
        Image img = backgroundImage.getImage().getScaledInstance(this.getWidth(), this.getHeight(), Image.SCALE_SMOOTH);
        backgroundLabel = new JLabel(new ImageIcon(img));

        backgroundLabel.setBounds(0, 0, this.getWidth(), this.getHeight());

        getLayeredPane().setLayout(null);
        getLayeredPane().add(backgroundLabel, new Integer(Integer.MIN_VALUE));

        ((JPanel) this.getContentPane()).setOpaque(false);

        setSize(500, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    private void carregarDruids() {
        this.druidsList = controller.getTodosDruids(); // Obtém a lista do Controller

        if (druidsList.isEmpty()) {
            currentIndex = 0;
        } else if (currentIndex >= druidsList.size()) {
            currentIndex = druidsList.size() - 1;
        }
    }

    private void exibirDruid() {
        if (!druidsList.isEmpty() && currentIndex >= 0 && currentIndex < druidsList.size()) {
            Druid currentDruid = druidsList.get(currentIndex);
            // Preencher os JTextFields e JTextPane
            jTextFieldNomeDruid.setText(currentDruid.getNome());
            jTextFieldLevelDruid.setText(String.valueOf(currentDruid.getLevel()));
            jTextPaneMagicLevelDruid.setText(String.valueOf(currentDruid.getMagicLevel()));

            jLabelDruidSalvos.setText("Nome: " + currentDruid.getNome()
                    + " | Level: " + currentDruid.getLevel()
                    + " | Magic Level: " + currentDruid.getMagicLevel()); // Alterado para Magic Level
        } else {
            // Limpa os campos se não houver Druid para exibir
            jTextFieldNomeDruid.setText("");
            jTextFieldLevelDruid.setText("");
            jTextPaneMagicLevelDruid.setText("");
            jLabelDruidSalvos.setText("Nenhum Druid salvo.");
        }
    }

    // O método atualizarArquivo() não é mais necessário aqui.
    // private void atualizarArquivo() { ... }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButtonSalvarDruid = new javax.swing.JButton();
        jButtonExcluirDruid = new javax.swing.JButton();
        jButtonAlterarDruid = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNomeDruid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldLevelDruid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneMagicLevelDruid = new javax.swing.JTextPane();
        jLabelDruidSalvos = new javax.swing.JLabel();
        jButtonPassarDruid = new javax.swing.JButton();
        jButtonPesquisarDruid = new javax.swing.JButton();

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonSalvarDruid.setText("Salvar");
        jButtonSalvarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSalvarDruidMouseClicked(evt);
            }
        });
        jButtonSalvarDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarDruidActionPerformed(evt);
            }
        });

        jButtonExcluirDruid.setText("Excluir");
        jButtonExcluirDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExcluirDruidMouseClicked(evt);
            }
        });

        jButtonAlterarDruid.setText("Alterar");
        jButtonAlterarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAlterarDruidMouseClicked(evt);
            }
        });
        jButtonAlterarDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarDruidActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 255));
        jLabel1.setText("Nome");

        jTextFieldNomeDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeDruidActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 255));
        jLabel2.setText("Level");

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 255));
        jLabel3.setText("MagicLvl");

        jTextFieldLevelDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLevelDruidActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPaneMagicLevelDruid);

        jLabelDruidSalvos.setFont(new java.awt.Font("Yu Gothic Medium", 3, 12)); // NOI18N
        jLabelDruidSalvos.setForeground(new java.awt.Color(255, 51, 255));

        jButtonPassarDruid.setText("Atualizar ou >>>");
        jButtonPassarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPassarDruidMouseClicked(evt);
            }
        });
        jButtonPassarDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPassarDruidActionPerformed(evt);
            }
        });

        jButtonPesquisarDruid.setText("Pesquisar");
        jButtonPesquisarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPesquisarDruidMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNomeDruid, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jTextFieldLevelDruid)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonPesquisarDruid)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButtonAlterarDruid)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButtonSalvarDruid)
                        .addGap(63, 63, 63)
                        .addComponent(jButtonExcluirDruid)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelDruidSalvos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jButtonPassarDruid)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNomeDruid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisarDruid))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldLevelDruid, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDruidSalvos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPassarDruid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvarDruid)
                    .addComponent(jButtonExcluirDruid)
                    .addComponent(jButtonAlterarDruid))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldLevelDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLevelDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLevelDruidActionPerformed

    private void jButtonAlterarDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAlterarDruidActionPerformed

    private void jButtonSalvarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSalvarDruidMouseClicked
        String nome = jTextFieldNomeDruid.getText();

        int level = 0;
        try {
            level = Integer.parseInt(jTextFieldLevelDruid.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um número válido para o Level.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int magicLevel = 0;
        try {
            magicLevel = Integer.parseInt(jTextPaneMagicLevelDruid.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um número válido para o Magic Level.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Druid druid = new Druid(nome, level, magicLevel);

        controller.salvar(druid);

        JOptionPane.showMessageDialog(this, "Druid salvo com sucesso!");

        carregarDruids();
        currentIndex = druidsList.size() - 1;
        exibirDruid();
    }//GEN-LAST:event_jButtonSalvarDruidMouseClicked

    private void jButtonSalvarDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSalvarDruidActionPerformed

    private void jButtonPassarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPassarDruidMouseClicked
        if (!druidsList.isEmpty()) {
            currentIndex = (currentIndex + 1) % druidsList.size();
            exibirDruid();
        }
    }//GEN-LAST:event_jButtonPassarDruidMouseClicked

    private void jButtonPassarDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPassarDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPassarDruidActionPerformed

    private void jButtonExcluirDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExcluirDruidMouseClicked
        if (!druidsList.isEmpty() && currentIndex >= 0 && currentIndex < druidsList.size()) {
            String nomeParaExcluir = druidsList.get(currentIndex).getNome();
            int confirm = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o Druid " + nomeParaExcluir + "?", "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                controller.excluir(nomeParaExcluir);
                JOptionPane.showMessageDialog(this, "Druid " + nomeParaExcluir + " excluído com sucesso!");
                carregarDruids(); // Recarrega a lista para refletir a exclusão
                if (!druidsList.isEmpty()) {
                    if (currentIndex >= druidsList.size()) {
                        currentIndex = druidsList.size() - 1;
                    }
                    exibirDruid();
                } else {
                    exibirDruid(); // Exibe "Nenhum Druid salvo."
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Druid para excluir.", "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonExcluirDruidMouseClicked

    private void jButtonAlterarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAlterarDruidMouseClicked
        if (!druidsList.isEmpty() && currentIndex >= 0 && currentIndex < druidsList.size()) {
            String nomeOriginal = druidsList.get(currentIndex).getNome(); // O nome original para buscar no controller

            // Pega os dados dos campos de texto da própria janela para alteração
            int level = 0;
            try {
                level = Integer.parseInt(jTextFieldLevelDruid.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor, insira um número válido para o Level.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int magicLevel = 0;
            try {
                magicLevel = Integer.parseInt(jTextPaneMagicLevelDruid.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor, insira um número válido para o Magic Level.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Chama o método alterar do controller
            controller.alterar(nomeOriginal, level, magicLevel);
            JOptionPane.showMessageDialog(this, "Dados do Druid " + nomeOriginal + " alterados com sucesso!");

            // Recarrega a lista para refletir a alteração e exibe os dados atualizados
            carregarDruids();
            exibirDruid();
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Druid selecionado para alterar.", "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAlterarDruidMouseClicked

    private void jTextFieldNomeDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeDruidActionPerformed

    private void jButtonPesquisarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPesquisarDruidMouseClicked
        String nomePesquisa = jTextFieldNomeDruid.getText().trim();
        if (nomePesquisa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, informe o nome para pesquisar.");
            return;
        }

        Druid foundDruid = controller.buscarPorNome(nomePesquisa); // Usa o controller para buscar

        if (foundDruid != null) {
            // Atualiza campos com o Druid encontrado
            jTextFieldNomeDruid.setText(foundDruid.getNome());
            jTextFieldLevelDruid.setText(String.valueOf(foundDruid.getLevel()));
            jTextPaneMagicLevelDruid.setText(String.valueOf(foundDruid.getMagicLevel()));

            // Atualiza o currentIndex para o Druid encontrado
            // Primeiro, garantir que druidsList está atualizada (chamar carregarDruids() antes, se houver risco de dessincronização)
            // No entanto, se o controller sempre retornar a lista mais recente, o indexOf funcionará.
            carregarDruids(); // Garante que a lista local druidsList está atualizada antes de buscar o índice
            currentIndex = druidsList.indexOf(foundDruid);

            // Atualiza label
            exibirDruid();

            JOptionPane.showMessageDialog(this, "Druid '" + nomePesquisa + "' encontrado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Druid com nome '" + nomePesquisa + "' não encontrado.");
        }
    }//GEN-LAST:event_jButtonPesquisarDruidMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DruidJanela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAlterarDruid;
    private javax.swing.JButton jButtonExcluirDruid;
    private javax.swing.JButton jButtonPassarDruid;
    private javax.swing.JButton jButtonPesquisarDruid;
    private javax.swing.JButton jButtonSalvarDruid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDruidSalvos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldLevelDruid;
    private javax.swing.JTextField jTextFieldNomeDruid;
    private javax.swing.JTextPane jTextPaneMagicLevelDruid;
    // End of variables declaration//GEN-END:variables
}
