/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Janelas;

import Controller.DruidController;
import Model.Druid;
import javax.swing.*;
import java.io.*;
import java.util.*;
import java.util.List;
import java.util.ArrayList;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import java.awt.Image;


public class DruidJanela extends javax.swing.JFrame {

    private DruidController controller = new DruidController();
    private List<Druid> druidsList = new ArrayList<>();
    private int currentIndex = 0;
    private JLabel backgroundLabel;
    /**
     * Creates new form Knight
     */
    public DruidJanela() {
        initComponents();
        carregarDruids(); // Carregar os kDruid ao iniciar a janela
        exibirDruid(); // Exibir o primeiro Druid
        setLocationRelativeTo(null);

        ImageIcon backgroundImage = new ImageIcon(getClass().getResource("/imagens/4.png"));
        Image img = backgroundImage.getImage().getScaledInstance(this.getWidth(), this.getHeight(), Image.SCALE_SMOOTH);
        backgroundLabel = new JLabel(new ImageIcon(img));

        backgroundLabel.setBounds(0, 0, this.getWidth(), this.getHeight());

        // Usar layout nulo para posicionar o JLabel no fundo
        getLayeredPane().setLayout(null);
        getLayeredPane().add(backgroundLabel, new Integer(Integer.MIN_VALUE));

        // Deixar o painel principal transparente para o fundo aparecer
        ((JPanel) this.getContentPane()).setOpaque(false);

        // Ajustar tamanho e outras configurações da janela (se quiser)
        setSize(500, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    private void carregarDruids() {
        try (BufferedReader reader = new BufferedReader(new FileReader("src/Personagens/druids.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] dados = line.split(",");
                if (dados.length == 3) {
                    String nome = dados[0];
                    int level = Integer.parseInt(dados[1]);
                    int magicLevel = Integer.parseInt(dados[2]);
                    druidsList.add(new Druid(nome, level, magicLevel));
                }
            }
        } catch (IOException e) {
            System.out.println("Erro ao carregar os Druids: " + e.getMessage());
        }
    }

    // Exibir o Druid atual no JLabel
    private void exibirDruid() {
        if (!druidsList.isEmpty()) {
            Druid currentDruid = druidsList.get(currentIndex);
            jLabelDruidSalvos.setText("Nome: " + currentDruid.getNome()
                    + " | Level: " + currentDruid.getLevel()
                    + " | Skill: " + currentDruid.getMagicLevel());
        } else {
            jLabelDruidSalvos.setText("Nenhum Druid salvo.");
        }
    }

    private void atualizarArquivo() {
        try (PrintWriter writer = new PrintWriter(new FileWriter("src/Personagens/druids.txt"))) {
            for (Druid druid : druidsList) {
                writer.println(druid.getNome() + "," + druid.getLevel() + "," + druid.getMagicLevel());
            }
            System.out.println("Arquivo Druids.txt atualizado com sucesso!");
        } catch (IOException e) {
            System.out.println("Erro ao atualizar o arquivo Druids.txt: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButtonSalvarDruid = new javax.swing.JButton();
        jButtonExcluirDruid = new javax.swing.JButton();
        jButtonAlterarDruid = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNomeDruid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldLevelDruid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneMagicLevelDruid = new javax.swing.JTextPane();
        jLabelDruidSalvos = new javax.swing.JLabel();
        jButtonPassarDruid = new javax.swing.JButton();
        jButtonPesquisarDruid = new javax.swing.JButton();

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonSalvarDruid.setText("Salvar");
        jButtonSalvarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSalvarDruidMouseClicked(evt);
            }
        });
        jButtonSalvarDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarDruidActionPerformed(evt);
            }
        });

        jButtonExcluirDruid.setText("Excluir");
        jButtonExcluirDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExcluirDruidMouseClicked(evt);
            }
        });

        jButtonAlterarDruid.setText("Alterar");
        jButtonAlterarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAlterarDruidMouseClicked(evt);
            }
        });
        jButtonAlterarDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarDruidActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 255));
        jLabel1.setText("Nome");

        jTextFieldNomeDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeDruidActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 255));
        jLabel2.setText("Level");

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 255));
        jLabel3.setText("MagicLvl");

        jTextFieldLevelDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLevelDruidActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPaneMagicLevelDruid);

        jLabelDruidSalvos.setFont(new java.awt.Font("Yu Gothic Medium", 3, 12)); // NOI18N
        jLabelDruidSalvos.setForeground(new java.awt.Color(255, 51, 255));

        jButtonPassarDruid.setText("Atualizar ou >>>");
        jButtonPassarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPassarDruidMouseClicked(evt);
            }
        });
        jButtonPassarDruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPassarDruidActionPerformed(evt);
            }
        });

        jButtonPesquisarDruid.setText("Pesquisar");
        jButtonPesquisarDruid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPesquisarDruidMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNomeDruid, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jTextFieldLevelDruid)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonPesquisarDruid)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButtonAlterarDruid)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButtonSalvarDruid)
                        .addGap(63, 63, 63)
                        .addComponent(jButtonExcluirDruid)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelDruidSalvos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jButtonPassarDruid)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNomeDruid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisarDruid))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldLevelDruid, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDruidSalvos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPassarDruid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvarDruid)
                    .addComponent(jButtonExcluirDruid)
                    .addComponent(jButtonAlterarDruid))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldLevelDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLevelDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLevelDruidActionPerformed

    private void jButtonAlterarDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAlterarDruidActionPerformed

    private void jButtonSalvarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSalvarDruidMouseClicked
        // Pega os dados dos campos
        String nome = jTextFieldNomeDruid.getText();
        int level = Integer.parseInt(jTextFieldLevelDruid.getText());
        int magicLevel = Integer.parseInt(jTextPaneMagicLevelDruid.getText());

        // Cria o objeto Druid
        Druid druid = new Druid(nome, level, magicLevel);

        // Salva usando o controller
        controller.salvar(druid);

        // Mensagem de sucesso
        JOptionPane.showMessageDialog(this, "Druid salvo com sucesso!");
        carregarDruids();
    }//GEN-LAST:event_jButtonSalvarDruidMouseClicked

    private void jButtonSalvarDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSalvarDruidActionPerformed

    private void jButtonPassarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPassarDruidMouseClicked
        if (!druidsList.isEmpty()) {
            // Incrementar o índice para passar para o próximo kDruid
            currentIndex = (currentIndex + 1) % druidsList.size(); // Volta ao primeiro kDruidt se ultrapassar o tamanho da lista
            exibirDruid(); // Atualiza a exibição do Druid
        }
    }//GEN-LAST:event_jButtonPassarDruidMouseClicked

    private void jButtonPassarDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPassarDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPassarDruidActionPerformed

    private void jButtonExcluirDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExcluirDruidMouseClicked
        if (!druidsList.isEmpty()) {
            // Excluir o knight atual da lista
            druidsList.remove(currentIndex);

            // Se a lista não estiver vazia após a exclusão, ajusta o índice
            if (currentIndex >= druidsList.size()) {
                currentIndex = druidsList.size() - 1; // Se o índice for maior que o tamanho, vai para o último knight
            }

            // Atualiza a exibição
            exibirDruid();

            // Atualizar o arquivo knights.txt
            atualizarArquivo();
        } else {
            // Se não houver knights, exibe uma mensagem
            JOptionPane.showMessageDialog(this, "Não há Druid para excluir.");
        }

    }//GEN-LAST:event_jButtonExcluirDruidMouseClicked

    private void jButtonAlterarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAlterarDruidMouseClicked
        if (druidsList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Não há Druid para alterar.");
            return;
        }

        Druid currentDruid = druidsList.get(currentIndex);

        // Cria os campos e preenche com os dados atuais
        JTextField nomeField = new JTextField(currentDruid.getNome());
        JTextField levelField = new JTextField(String.valueOf(currentDruid.getLevel()));
        JTextField magicLevelField = new JTextField(String.valueOf(currentDruid.getMagicLevel()));

        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Nome:"));
        panel.add(nomeField);
        panel.add(new JLabel("Level:"));
        panel.add(levelField);
        panel.add(new JLabel("Skill:"));
        panel.add(magicLevelField);

        int resultado = JOptionPane.showConfirmDialog(this, panel, "Editar Druid",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (resultado == JOptionPane.OK_OPTION) {
            try {
                String novoNome = nomeField.getText().trim();
                int novoLevel = Integer.parseInt(levelField.getText().trim());
                int novoMagicLevel = Integer.parseInt(magicLevelField.getText().trim());

                // Atualiza os dados do knight
                currentDruid.setNome(novoNome);
                currentDruid.setLevel(novoLevel);
                currentDruid.setMagicLevel(novoMagicLevel);

                // Atualiza exibição e arquivo
                exibirDruid();
                atualizarArquivo();

                JOptionPane.showMessageDialog(this, "Druid alterado com sucesso!");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Level e Ml devem ser números inteiros.");
            }
        }
    }//GEN-LAST:event_jButtonAlterarDruidMouseClicked

    private void jTextFieldNomeDruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeDruidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeDruidActionPerformed

    private void jButtonPesquisarDruidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPesquisarDruidMouseClicked
        String nomePesquisa = jTextFieldNomeDruid.getText().trim();
        if (nomePesquisa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, informe o nome para pesquisar.");
            return;
        }

        boolean encontrado = false;

        for (int i = 0; i < druidsList.size(); i++) {
            Druid k = druidsList.get(i);
            if (k.getNome().equalsIgnoreCase(nomePesquisa)) {
                // Atualiza campos com o Druid encontrado
                jTextFieldNomeDruid.setText(k.getNome());
                jTextFieldLevelDruid.setText(String.valueOf(k.getLevel()));
                jTextPaneMagicLevelDruid.setText(String.valueOf(k.getMagicLevel()));

                // Atualiza índice atual
                currentIndex = i;

                // Atualiza label
                exibirDruid();

                encontrado = true;
                break;
            }
        }

        if (!encontrado) {
            JOptionPane.showMessageDialog(this, "Druid com nome '" + nomePesquisa + "' não encontrado.");
        }

    }//GEN-LAST:event_jButtonPesquisarDruidMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DruidJanela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DruidJanela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAlterarDruid;
    private javax.swing.JButton jButtonExcluirDruid;
    private javax.swing.JButton jButtonPassarDruid;
    private javax.swing.JButton jButtonPesquisarDruid;
    private javax.swing.JButton jButtonSalvarDruid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDruidSalvos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldLevelDruid;
    private javax.swing.JTextField jTextFieldNomeDruid;
    private javax.swing.JTextPane jTextPaneMagicLevelDruid;
    // End of variables declaration//GEN-END:variables
}
